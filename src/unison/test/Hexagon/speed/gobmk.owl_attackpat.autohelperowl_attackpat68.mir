--- |
  ; ModuleID = 'gobmk.owl_attackpat.autohelperowl_attackpat68.ll'
  target datalayout = "e-m:e-p:32:32:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f64:64:64-f32:32:32-v64:64:64-v32:32:32-a:0-n16:32"
  target triple = "hexagon"
  
  @transformation = external global [1369 x [8 x i32]], align 8
  
  ; Function Attrs: nounwind
  define hidden i32 @autohelperowl_attackpat68(i32 %trans, i32 %move, i32 %color, i32 %action) #0 {
    %cgep3 = bitcast [1369 x [8 x i32]]* @transformation to [1369 x [8 x i32]]*
    %cgep1 = getelementptr [1369 x [8 x i32]], [1369 x [8 x i32]]* %cgep3, i32 0, i32 683, i32 %trans
    %1 = load i32, i32* %cgep1, align 4
    %2 = add nsw i32 %1, %move
    %cgep2 = getelementptr [1369 x [8 x i32]], [1369 x [8 x i32]]* %cgep3, i32 0, i32 646, i32 %trans
    %3 = load i32, i32* %cgep2, align 4
    %4 = add nsw i32 %3, %move
    %5 = tail call i32 (i32, i32, i32, ...) @play_attack_defend2_n(i32 %color, i32 0, i32 2, i32 %move, i32 %2, i32 %move, i32 %4) #2
    ret i32 %5
  }
  
  declare i32 @play_attack_defend2_n(i32, i32, i32, ...) #1
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv4" "target-features"="-hvx,-hvx-double" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv4" "target-features"="-hvx,-hvx-double" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            autohelperowl_attackpat68
alignment:       4
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: intregs }
  - { id: 1, class: intregs }
  - { id: 2, class: intregs }
  - { id: 3, class: intregs }
  - { id: 4, class: intregs }
  - { id: 5, class: intregs }
  - { id: 6, class: intregs }
  - { id: 7, class: intregs }
  - { id: 8, class: intregs }
  - { id: 9, class: intregs }
  - { id: 10, class: intregs }
  - { id: 11, class: intregs }
  - { id: 12, class: intregs }
liveins:         
  - { reg: '%r0', virtual-reg: '%0' }
  - { reg: '%r1', virtual-reg: '%1' }
  - { reg: '%r2', virtual-reg: '%2' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %r0, %r1, %r2
    liveouts: %r0
  
    %2 = COPY %r2
    %1 = COPY %r1
    %0 = COPY %r0
    %4 = S4_addi_asl_ri @transformation, %0, 2, <0x2bf74c0> = !{!"unison-property", !"constant-extended"}
    %5 = L2_loadri_io %4, 21856, <0x2bf74c0> = !{!"unison-property", !"constant-extended"}, <0x2bf7cd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.cgep1)
    %6 = A2_add killed %5, %1
    %7 = L2_loadri_io %4, 20672, <0x2bf74c0> = !{!"unison-property", !"constant-extended"}, <0x2bf7cd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.cgep2)
    %8 = A2_add killed %7, %1
    %9 = COPY %r29
    S2_storeri_io %9, 12, killed %8, <0x2bf7cd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into stack + 12)
    S2_storeri_io %9, 8, %1, <0x2bf7cd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into stack + 8)
    S2_storeri_io %9, 4, killed %6, <0x2bf7cd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into stack + 4)
    S2_storeri_io %9, 0, %1, <0x2bf7cd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into stack)
    ADJCALLSTACKDOWN 16, implicit-def dead %r29, implicit-def dead %r30, implicit %r31, implicit %r30, implicit %r29
    %10 = A2_tfrsi 0
    %11 = A2_tfrsi 2
    %r0 = COPY %2
    %r1 = COPY %10
    %r2 = COPY %11
    J2_call @play_attack_defend2_n, implicit-def %d0, implicit-def dead %d1, implicit-def dead %d2, implicit-def dead %d3, implicit-def dead %d4, implicit-def dead %d5, implicit-def dead %d6, implicit-def dead %d7, implicit-def dead %r28, implicit-def dead %r31, implicit-def dead %p0, implicit-def dead %p1, implicit-def dead %p2, implicit-def dead %p3, implicit-def dead %m0, implicit-def dead %m1, implicit-def dead %lc0, implicit-def dead %lc1, implicit-def dead %sa0, implicit-def dead %sa1, implicit-def dead %usr, implicit-def dead %usr_ovf, implicit %r0, implicit %r1, implicit %r2
    ADJCALLSTACKUP 16, 0, implicit-def dead %r29, implicit-def dead %r30, implicit-def dead %r31, implicit %r29
    %12 = COPY %r0
    %r0 = COPY %12
    JMPret %r31, implicit-def dead %pc, implicit %r0

...
---
unison-test-target: Hexagon
unison-test-goal: speed
unison-test-expected-cost: 6
unison-test-expected-proven: true
unison-test-expected-has-solution: false
...
