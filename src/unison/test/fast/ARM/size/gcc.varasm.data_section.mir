--- |
  ; ModuleID = 'gcc.varasm.data_section.ll'
  target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
  target triple = "armv6t2-pc-linux-eabi"
  
  %struct._IO_FILE.171 = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker.172*, %struct._IO_FILE.171*, i32, i32, i32, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [40 x i8] }
  %struct._IO_marker.172 = type { %struct._IO_marker.172*, %struct._IO_FILE.171*, i32 }
  
  @in_section = external hidden unnamed_addr global i32, align 4
  @asm_out_file = external global %struct._IO_FILE.171*, align 4
  @.str = external hidden unnamed_addr constant [4 x i8], align 1
  @.str.3 = external hidden unnamed_addr constant [7 x i8], align 1
  
  ; Function Attrs: nounwind
  declare i32 @fprintf(%struct._IO_FILE.171* nocapture, i8* nocapture readonly, ...) #0
  
  ; Function Attrs: nounwind
  define void @data_section() #0 {
    %1 = load i32, i32* @in_section, align 4
    %2 = icmp eq i32 %1, 2
    br i1 %2, label %6, label %3
  
  ; <label>:3                                       ; preds = %0
    %4 = load %struct._IO_FILE.171*, %struct._IO_FILE.171** @asm_out_file, align 4
    %5 = tail call i32 (%struct._IO_FILE.171*, i8*, ...) @fprintf(%struct._IO_FILE.171* %4, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0))
    store i32 2, i32* @in_section, align 4
    br label %6
  
  ; <label>:6                                       ; preds = %3, %0
    ret void
  }
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="arm1156t2f-s" "target-features"="+thumb-mode" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.module.flags = !{!0, !1}
  !llvm.ident = !{!2}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{i32 1, !"min_enum_size", i32 4}
  !2 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            data_section
alignment:       1
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: rgpr }
  - { id: 1, class: gprnopc }
  - { id: 2, class: rgpr }
  - { id: 3, class: gpr }
  - { id: 4, class: rgpr }
  - { id: 5, class: rgpr }
  - { id: 6, class: gpr }
  - { id: 7, class: rgpr }
  - { id: 8, class: rgpr }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 16):
    successors: %bb.2(50), %bb.1(50)
  
    %0 = t2MOVi32imm @in_section
    %1 = t2LDRi12 %0, 0, 14, _, <0x34829e0> = !{!"unison-memory-partition", i32 0} :: (load 4 from @in_section)
    t2CMPri killed %1, 2, 14, _, implicit-def %cpsr
    t2Bcc %bb.2, 0, %cpsr
    t2B %bb.1, 14, _
  
  bb.1 (%ir-block.3, freq 8):
    successors: %bb.2(100)
  
    %2 = t2MOVi32imm @asm_out_file
    %3 = t2LDRi12 killed %2, 0, 14, _, <0x34829e0> = !{!"unison-memory-partition", i32 0} :: (load 4 from @asm_out_file)
    ADJCALLSTACKDOWN 0, 14, _, implicit-def dead %sp, implicit %sp
    %4 = t2MOVi32imm @.str
    %5 = t2MOVi32imm @.str.3
    %r0 = COPY %3
    %r1 = COPY %4
    %r2 = COPY %5
    tBL 14, _, @fprintf, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit %r0, implicit %r1, implicit %r2, implicit-def %sp, implicit-def %r0
    ADJCALLSTACKUP 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    %8 = t2MOVi 2, 14, _, _
    t2STRi12 killed %8, %0, 0, 14, _, <0x3482ad0> = !{!"unison-memory-partition", i32 1} :: (store 4 into @in_section)
  
  bb.2 (%ir-block.6, freq 16):
    liveouts:
  
    tBX_RET 14, _

...
---
unison-test-target: ARM
unison-test-goal: size
unison-test-expected-cost: 28
unison-test-expected-proven: true
unison-test-expected-has-solution: false
...
