--- |
  ; ModuleID = 'gcc.jump.unsigned_condition.ll'
  target datalayout = "e-m:e-p:32:32:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f64:64:64-f32:32:32-v64:64:64-v32:32:32-a:0-n16:32"
  target triple = "hexagon"
  
  @.str = external hidden unnamed_addr constant [7 x i8], align 1
  @__FUNCTION__.unsigned_condition = external hidden unnamed_addr constant [19 x i8], align 1
  
  ; Function Attrs: noreturn
  declare void @fancy_abort(i8*, i32, i8*) #0
  
  ; Function Attrs: nounwind
  define zeroext i8 @unsigned_condition(i8 zeroext %code) #1 {
    %1 = zext i8 %code to i32
    switch i32 %1, label %6 [
      i32 103, label %7
      i32 102, label %7
      i32 109, label %7
      i32 108, label %7
      i32 111, label %7
      i32 110, label %7
      i32 105, label %2
      i32 104, label %3
      i32 107, label %4
      i32 106, label %5
    ]
  
  ; <label>:2                                       ; preds = %0
    br label %7
  
  ; <label>:3                                       ; preds = %0
    br label %7
  
  ; <label>:4                                       ; preds = %0
    br label %7
  
  ; <label>:5                                       ; preds = %0
    br label %7
  
  ; <label>:6                                       ; preds = %0
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32 951, i8* nonnull getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.unsigned_condition, i32 0, i32 0)) #2
    unreachable
  
  ; <label>:7                                       ; preds = %5, %4, %3, %2, %0, %0, %0, %0, %0, %0
    %.0 = phi i8 [ 110, %5 ], [ 111, %4 ], [ 108, %3 ], [ 109, %2 ], [ %code, %0 ], [ %code, %0 ], [ %code, %0 ], [ %code, %0 ], [ %code, %0 ], [ %code, %0 ]
    ret i8 %.0
  }
  
  attributes #0 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv4" "target-features"="-hvx,-hvx-double" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv4" "target-features"="-hvx,-hvx-double" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { noreturn nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            unsigned_condition
alignment:       4
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: intregs }
  - { id: 1, class: intregs }
  - { id: 2, class: intregs }
  - { id: 3, class: intregs }
  - { id: 4, class: predregs }
  - { id: 5, class: intregs }
  - { id: 6, class: intregs }
  - { id: 7, class: intregs }
  - { id: 8, class: intregs }
  - { id: 9, class: intregs }
  - { id: 10, class: intregs }
  - { id: 11, class: intregs }
  - { id: 12, class: intregs }
  - { id: 13, class: intregs }
liveins:         
  - { reg: '%r0', virtual-reg: '%1' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    0
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
jumpTable:       
  kind:            block-address
  entries:         
    - id:              0
      blocks:          [ '%bb.6', '%bb.6', '%bb.2', '%bb.1', '%bb.4', '%bb.3', 
                         '%bb.6', '%bb.6', '%bb.6', '%bb.6' ]
body:             |
  bb.0 (%ir-block.0, freq 8388607):
    successors: %bb.5(0), %bb.7(99)
    liveins: %r0
  
    %1 = COPY %r0
    %3 = A2_addi %1, -102
    %4 = C2_cmpgtui %3, 9
    J2_jumpt %4, %bb.5, implicit-def dead %pc
  
  bb.7 (%ir-block.0, freq 8388599):
    successors: %bb.6(60), %bb.2(10), %bb.1(10), %bb.4(10), %bb.3(10)
  
    %5 = A2_tfrsi %jump-table.0, <0x3243f70> = !{!"unison-property", !"constant-extended"}
    %6 = L4_loadri_rr %5, %3, 2, <0x32440c0> = !{!"unison-memory-partition", i32 0} :: (load 4 from jump-table)
    J2_jumpr %6, implicit-def dead %pc
  
  bb.1 (%ir-block.2, freq 838860):
    successors: %bb.6(100)
  
    %10 = A2_tfrsi 109
    J2_jump %bb.6, implicit-def dead %pc
  
  bb.2 (%ir-block.3, freq 838859):
    successors: %bb.6(100)
  
    %9 = A2_tfrsi 108
    J2_jump %bb.6, implicit-def dead %pc
  
  bb.3 (%ir-block.4, freq 838860):
    successors: %bb.6(100)
  
    %8 = A2_tfrsi 111
    J2_jump %bb.6, implicit-def dead %pc
  
  bb.4 (%ir-block.5, freq 838859):
    successors: %bb.6(100)
  
    %7 = A2_tfrsi 110
    J2_jump %bb.6, implicit-def dead %pc
  
  bb.5 (%ir-block.6, freq 8):
    exit
  
    ADJCALLSTACKDOWN 0, implicit-def dead %r29, implicit-def dead %r30, implicit %r31, implicit %r30, implicit %r29
    %11 = A2_tfrsi @.str, <0x3243f70> = !{!"unison-property", !"constant-extended"}
    %12 = A2_tfrsi @__FUNCTION__.unsigned_condition, <0x3243f70> = !{!"unison-property", !"constant-extended"}
    %13 = A2_tfrsi 951
    %r0 = COPY %11
    %r1 = COPY %13
    %r2 = COPY %12
    CALLv3nr @fancy_abort, implicit-def dead %d0, implicit-def dead %d1, implicit-def dead %d2, implicit-def dead %d3, implicit-def dead %d4, implicit-def dead %d5, implicit-def dead %d6, implicit-def dead %d7, implicit-def dead %r28, implicit-def dead %r31, implicit-def dead %p0, implicit-def dead %p1, implicit-def dead %p2, implicit-def dead %p3, implicit-def dead %m0, implicit-def dead %m1, implicit-def dead %lc0, implicit-def dead %lc1, implicit-def dead %sa0, implicit-def dead %sa1, implicit-def dead %usr, implicit-def dead %usr_ovf, implicit %r0, implicit %r1, implicit %r2
    ADJCALLSTACKUP 0, 0, implicit-def dead %r29, implicit-def dead %r30, implicit-def dead %r31, implicit %r29
  
  bb.6 (%ir-block.7, freq 8388599):
    liveouts: %r0
  
    %0 = PHI %1, %bb.7, %7, %bb.4, %8, %bb.3, %9, %bb.2, %10, %bb.1
    %r0 = COPY %0
    JMPret %r31, implicit-def dead %pc, implicit %r0

...
---
unison-test-target: Hexagon
unison-test-goal:
- size
unison-test-expected-cost:
- 20
unison-test-expected-proven: true
unison-test-expected-has-solution: false
...
