--- |
  ; ModuleID = 'gcc.varasm.data_section.ll'
  target datalayout = "e-m:e-p:32:32:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f64:64:64-f32:32:32-v64:64:64-v32:32:32-a:0-n16:32"
  target triple = "hexagon"
  
  %struct._IO_FILE.171 = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker.172*, %struct._IO_FILE.171*, i32, i32, i32, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [40 x i8] }
  %struct._IO_marker.172 = type { %struct._IO_marker.172*, %struct._IO_FILE.171*, i32 }
  
  @in_section = external hidden unnamed_addr global i8, align 1
  @asm_out_file = external global %struct._IO_FILE.171*, align 4
  @.str = external hidden unnamed_addr constant [4 x i8], align 1
  @.str.3 = external hidden unnamed_addr constant [7 x i8], align 1
  
  ; Function Attrs: nounwind
  declare i32 @fprintf(%struct._IO_FILE.171* nocapture, i8* nocapture readonly, ...) #0
  
  ; Function Attrs: nounwind
  define void @data_section() #0 {
    %1 = load i8, i8* @in_section, align 1
    %2 = icmp eq i8 %1, 2
    br i1 %2, label %6, label %3
  
  ; <label>:3                                       ; preds = %0
    %4 = load %struct._IO_FILE.171*, %struct._IO_FILE.171** @asm_out_file, align 4
    %5 = tail call i32 (%struct._IO_FILE.171*, i8*, ...) @fprintf(%struct._IO_FILE.171* %4, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0))
    store i8 2, i8* @in_section, align 1
    br label %6
  
  ; <label>:6                                       ; preds = %3, %0
    ret void
  }
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv4" "target-features"="-hvx,-hvx-double" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            data_section
alignment:       4
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: intregs }
  - { id: 1, class: predregs }
  - { id: 2, class: intregs }
  - { id: 3, class: intregs }
  - { id: 4, class: intregs }
  - { id: 5, class: intregs }
  - { id: 6, class: intregs }
  - { id: 7, class: intregs }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 16):
    successors: %bb.2(50), %bb.1(50)
  
    %0 = L4_loadrb_abs @in_section, <0x3497740> = !{!"unison-property", !"constant-extended"}, <0x3498990> = !{!"unison-memory-partition", i32 0} :: (load 1 from @in_section)
    %1 = C2_cmpeqi %0, 2
    J2_jumpt %1, %bb.2, implicit-def dead %pc
    J2_jump %bb.1, implicit-def dead %pc
  
  bb.1 (%ir-block.3, freq 8):
    successors: %bb.2(100)
  
    %2 = L4_loadri_abs @asm_out_file, <0x3497740> = !{!"unison-property", !"constant-extended"}, <0x3498990> = !{!"unison-memory-partition", i32 0} :: (load 4 from @asm_out_file)
    %3 = A2_tfrsi @.str.3, <0x3497740> = !{!"unison-property", !"constant-extended"}
    %4 = COPY %r29
    S2_storeri_io %4, 0, %3, <0x3498990> = !{!"unison-memory-partition", i32 0} :: (store 4 into stack)
    ADJCALLSTACKDOWN 4, implicit-def dead %r29, implicit-def dead %r30, implicit %r31, implicit %r30, implicit %r29
    %5 = A2_tfrsi @.str, <0x3497740> = !{!"unison-property", !"constant-extended"}
    %r0 = COPY %2
    %r1 = COPY %5
    J2_call @fprintf, implicit-def %d0, implicit-def dead %d1, implicit-def dead %d2, implicit-def dead %d3, implicit-def dead %d4, implicit-def dead %d5, implicit-def dead %d6, implicit-def dead %d7, implicit-def dead %r28, implicit-def dead %r31, implicit-def dead %p0, implicit-def dead %p1, implicit-def dead %p2, implicit-def dead %p3, implicit-def dead %m0, implicit-def dead %m1, implicit-def dead %lc0, implicit-def dead %lc1, implicit-def dead %sa0, implicit-def dead %sa1, implicit-def dead %usr, implicit-def dead %usr_ovf, implicit %r0, implicit %r1
    ADJCALLSTACKUP 4, 0, implicit-def dead %r29, implicit-def dead %r30, implicit-def dead %r31, implicit %r29
    %7 = A2_tfrsi 2
    S2_storerbabs @in_section, %7, <0x3497740> = !{!"unison-property", !"constant-extended"}, <0x3498990> = !{!"unison-memory-partition", i32 0} :: (store 1 into @in_section)
  
  bb.2 (%ir-block.6, freq 16):
    liveouts:
  
    JMPret %r31, implicit-def dead %pc

...
---
unison-test-target: Hexagon
unison-test-goal: speed
unison-test-expected-cost: 9
unison-test-expected-proven: true
unison-test-expected-has-solution: false
...
