--- |
  ; ModuleID = 'h264ref.memalloc.no_mem_exit.ll'
  target datalayout = "e-m:e-p:32:32:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f64:64:64-f32:32:32-v64:64:64-v32:32:32-a:0-n16:32"
  target triple = "hexagon"
  
  @errortext = external global [300 x i8], align 8
  @.str.20 = external hidden unnamed_addr constant [30 x i8], align 1
  
  ; Function Attrs: nounwind
  define void @no_mem_exit(i8* %where) #0 {
    %1 = tail call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i32 0, i32 0), i32 300, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i8* %where) #2
    tail call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i32 0, i32 0), i32 100) #2
    ret void
  }
  
  declare void @error(i8*, i32) #1
  
  ; Function Attrs: nounwind
  declare i32 @snprintf(i8* nocapture, i32, i8* nocapture readonly, ...) #0
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv4" "target-features"="-hvx,-hvx-double" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="hexagonv4" "target-features"="-hvx,-hvx-double" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            no_mem_exit
alignment:       4
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: intregs }
  - { id: 1, class: intregs }
  - { id: 2, class: intregs }
  - { id: 3, class: intregs }
  - { id: 4, class: intregs }
  - { id: 5, class: intregs }
  - { id: 6, class: intregs }
liveins:         
  - { reg: '%r0', virtual-reg: '%0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %r0
    liveouts: %r0, %r1
  
    %0 = COPY %r0
    %1 = COPY %r29
    S2_storeri_io %1, 0, %0, <0x339d2b0> = !{!"unison-memory-partition", i32 0} :: (store 4 into stack)
    ADJCALLSTACKDOWN 4, implicit-def dead %r29, implicit-def dead %r30, implicit %r31, implicit %r30, implicit %r29
    %2 = A2_tfrsi @errortext, <0x3398370> = !{!"unison-property", !"constant-extended"}
    %3 = A2_tfrsi @.str.20, <0x3398370> = !{!"unison-property", !"constant-extended"}
    %4 = A2_tfrsi 300
    %r0 = COPY %2
    %r1 = COPY %4
    %r2 = COPY %3
    J2_call @snprintf, implicit-def %d0, implicit-def dead %d1, implicit-def dead %d2, implicit-def dead %d3, implicit-def dead %d4, implicit-def dead %d5, implicit-def dead %d6, implicit-def dead %d7, implicit-def dead %r28, implicit-def dead %r31, implicit-def dead %p0, implicit-def dead %p1, implicit-def dead %p2, implicit-def dead %p3, implicit-def dead %m0, implicit-def dead %m1, implicit-def dead %lc0, implicit-def dead %lc1, implicit-def dead %sa0, implicit-def dead %sa1, implicit-def dead %usr, implicit-def dead %usr_ovf, implicit %r0, implicit %r1, implicit %r2
    ADJCALLSTACKUP 4, 0, implicit-def dead %r29, implicit-def dead %r30, implicit-def dead %r31, implicit %r29
    %6 = A2_tfrsi 100
    %r0 = COPY %2
    %r1 = COPY %6
    TCRETURNi @error, implicit %r0, implicit %r1

...
---
unison-test-target: Hexagon
unison-test-goal: speed
unison-test-expected-cost: 5
unison-test-expected-proven: true
unison-test-expected-has-solution: false
...
